// Mocks generated by Mockito 5.4.6 from annotations
// in coptic_pulse/test/integration/liturgy_schedule_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:coptic_pulse/models/liturgy_event.dart' as _i4;
import 'package:coptic_pulse/services/liturgy_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LiturgyService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLiturgyService extends _i1.Mock implements _i2.LiturgyService {
  MockLiturgyService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.LiturgyEvent>> getLiturgyEvents({
    DateTime? startDate,
    DateTime? endDate,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getLiturgyEvents, [], {
              #startDate: startDate,
              #endDate: endDate,
              #limit: limit,
            }),
            returnValue: _i3.Future<List<_i4.LiturgyEvent>>.value(
              <_i4.LiturgyEvent>[],
            ),
          )
          as _i3.Future<List<_i4.LiturgyEvent>>);

  @override
  _i3.Future<List<_i4.LiturgyEvent>> getLiturgyEventsForDate(DateTime? date) =>
      (super.noSuchMethod(
            Invocation.method(#getLiturgyEventsForDate, [date]),
            returnValue: _i3.Future<List<_i4.LiturgyEvent>>.value(
              <_i4.LiturgyEvent>[],
            ),
          )
          as _i3.Future<List<_i4.LiturgyEvent>>);

  @override
  _i3.Future<List<_i4.LiturgyEvent>> getUpcomingLiturgyEvents() =>
      (super.noSuchMethod(
            Invocation.method(#getUpcomingLiturgyEvents, []),
            returnValue: _i3.Future<List<_i4.LiturgyEvent>>.value(
              <_i4.LiturgyEvent>[],
            ),
          )
          as _i3.Future<List<_i4.LiturgyEvent>>);

  @override
  _i3.Future<List<_i4.LiturgyEvent>> getLiturgyEventsForMonth(
    DateTime? month,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getLiturgyEventsForMonth, [month]),
            returnValue: _i3.Future<List<_i4.LiturgyEvent>>.value(
              <_i4.LiturgyEvent>[],
            ),
          )
          as _i3.Future<List<_i4.LiturgyEvent>>);

  @override
  _i3.Future<_i4.LiturgyEvent?> getLiturgyEvent(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getLiturgyEvent, [id]),
            returnValue: _i3.Future<_i4.LiturgyEvent?>.value(),
          )
          as _i3.Future<_i4.LiturgyEvent?>);
}
