// Mocks generated by Mockito 5.4.6 from annotations
// in coptic_pulse/test/widget/screens/admin_dashboard_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:coptic_pulse/models/post.dart' as _i3;
import 'package:coptic_pulse/providers/auth_provider.dart' as _i5;
import 'package:coptic_pulse/services/approval_service.dart' as _i4;
import 'package:coptic_pulse/services/post_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostResponse_0 extends _i1.SmartFake implements _i2.PostResponse {
  _FakePostResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePost_1 extends _i1.SmartFake implements _i3.Post {
  _FakePost_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeApprovalStats_2 extends _i1.SmartFake implements _i4.ApprovalStats {
  _FakeApprovalStats_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i5.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  bool get isAdmin =>
      (super.noSuchMethod(Invocation.getter(#isAdmin), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> login(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [email, password]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> refreshToken() =>
      (super.noSuchMethod(
            Invocation.method(#refreshToken, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> validateSession() =>
      (super.noSuchMethod(
            Invocation.method(#validateSession, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ApprovalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApprovalService extends _i1.Mock implements _i4.ApprovalService {
  MockApprovalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.PostResponse> getPendingPosts({
    int? page = 1,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getPendingPosts, [], {
              #page: page,
              #limit: limit,
            }),
            returnValue: _i6.Future<_i2.PostResponse>.value(
              _FakePostResponse_0(
                this,
                Invocation.method(#getPendingPosts, [], {
                  #page: page,
                  #limit: limit,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.PostResponse>);

  @override
  _i6.Future<_i3.Post> approvePost(String? postId) =>
      (super.noSuchMethod(
            Invocation.method(#approvePost, [postId]),
            returnValue: _i6.Future<_i3.Post>.value(
              _FakePost_1(this, Invocation.method(#approvePost, [postId])),
            ),
          )
          as _i6.Future<_i3.Post>);

  @override
  _i6.Future<_i3.Post> rejectPost(String? postId, {String? reason}) =>
      (super.noSuchMethod(
            Invocation.method(#rejectPost, [postId], {#reason: reason}),
            returnValue: _i6.Future<_i3.Post>.value(
              _FakePost_1(
                this,
                Invocation.method(#rejectPost, [postId], {#reason: reason}),
              ),
            ),
          )
          as _i6.Future<_i3.Post>);

  @override
  _i6.Future<_i3.Post> requestRevision(String? postId, String? feedback) =>
      (super.noSuchMethod(
            Invocation.method(#requestRevision, [postId, feedback]),
            returnValue: _i6.Future<_i3.Post>.value(
              _FakePost_1(
                this,
                Invocation.method(#requestRevision, [postId, feedback]),
              ),
            ),
          )
          as _i6.Future<_i3.Post>);

  @override
  _i6.Future<_i4.ApprovalStats> getApprovalStats() =>
      (super.noSuchMethod(
            Invocation.method(#getApprovalStats, []),
            returnValue: _i6.Future<_i4.ApprovalStats>.value(
              _FakeApprovalStats_2(
                this,
                Invocation.method(#getApprovalStats, []),
              ),
            ),
          )
          as _i6.Future<_i4.ApprovalStats>);
}
